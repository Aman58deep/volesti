% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/round_polytope.R
\name{round_polytope}
\alias{round_polytope}
\title{Apply rounding to a convex polytope (H-polytope, V-polytope or a zonotope).}
\usage{
round_polytope(A, b, V, G, walk_length, ball_walk, delta, coordinate, verbose)
}
\arguments{
\item{A}{Only for H-polytopes. The \eqn{m\times d} matrix \eqn{A} that containes the directions of the \eqn{m} facets.}

\item{b}{Only for H-polytopes. The \eqn{m}-dimensional vector \eqn{b} that containes the constants of the \eqn{m} facets s.t.: \eqn{Ax\leq b}.}

\item{V}{Only for V-polytopes. The \eqn{m\times d} matrix V that containes row-wise the \eqn{m} \eqn{d}-dimensional vertices of the polytope.}

\item{G}{Only for zonotopes. The \eqn{m\times d} matrix G that containes row-wise the \eqn{m} \eqn{d}-dimensional segments that define a zonotope.}

\item{walk_length}{Optional. The number of the steps for the random walk. Default value is \eqn{\lfloor 10+d/10\rfloor}.}

\item{ball_walk}{Optional. Boolean parameter to use ball walk, only for CG algorithm. Default value is false.}

\item{delta}{Optional. The radius for the ball walk.}

\item{coordinate}{Optional. A boolean parameter for the hit-and-run. True for Coordinate Directions HnR, false for Random Directions HnR. Default value is true.}

\item{verbose}{Optional. A boolean parameter for printing. Default value is false.}
}
\value{
For H-polytopes the return value is a list that containes a \eqn{m\times d} matrix A and a \eqn{m}-dimensional vector b s.t.: \eqn{Ax\leq b}. For V-polytopes and zonotopes the return value is a list with first element a \eqn{m\times d} matrix that containes row-wise the \eqn{d}-dimensional vertices or segments respectively. For all the representations the returned list containes element "round_value" which is the determinant of the square matrix of the linear transformation that was applied on the polytope that is given as input.
}
\description{
Given a convex H or V polytope or a zonotope as input this function computes a rounding based on minimum volume enclosing ellipsoid of a pointset.
}
\examples{
# rotate a H-polytope (2d unit simplex)
A = matrix(c(-1,0,0,-1,1,1), ncol=2, nrow=3, byrow=TRUE)
b = c(0,0,1)
listHpoly = round_polytope(A=A, b=b)

# rotate a V-polytope (3d cube) using Random Directions HnR
Vmat = matrix(c(-1,1,-1,-1,-1,1,-1,1,1,-1,-1,-1,1,1,-1,1,-1,1,1,1,1,1,-1,-1), ncol=3, nrow=8, byrow=TRUE)
ListVpoly = round_polytope(V=Vmat, coordinate=FALSE)

# rotate a 10-dimensional zonotope defined by the Minkowski sum of 20 segments
Zmat = GenZonotope(10,20)
ListZono = round_polytope(G=Zmat)
}
