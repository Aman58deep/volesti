% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rand_rotate.R
\name{rand_rotate}
\alias{rand_rotate}
\title{Apply a random rotation to a convex H or V-polytope.}
\usage{
rand_rotate(Inputs)
}
\arguments{
\item{list("argument"=value)}{A list that includes elements that describe the convex polytope given as input.}

\item{path}{The path to an ine or ext file that describes the H or V polytope respectively. If path is given then "matrix" and "vector" inputs are not needed.}

\item{matrix}{The matrix of the H polytope or the matrix that contains all the vertices of a V polytope row-wise. If the matrix is in ine file, for H-polytopes only (see examples), then the "vector" input is not needed.}

\item{vector}{Only for H-polytopes. The d-dimensional vector b that containes the constants of the facets.}

\item{vpoly}{A boolean parameter, has to be true when a V-polytope is given as input. Default value is false.}

\item{verbose}{Optional. A boolean parameter for printing. Default is false.}
}
\value{
A H or V-polytope which is a random rotation of the polytope that is given as an input. The output for a H-polytope is a list that containes elements "matrix" and "vector". For a V-polytope the output is a \eqn{k\times d} matrix that contains the \eqn{k} vertices of the V polytope row-wise.
}
\description{
Given a convex H or V polytope as input and then a random rotation is applied to the polytope.
}
\examples{
#rotate a H-polytope (2d unit simplex)
A = matrix(c(-1,0,0,-1,1,1), ncol=2, nrow=3, byrow=TRUE)
b = c(0,0,1)
listHpoly = rand_rotate(list("matrix"=A, "vector"=b))

#rotate a V-polytope (3d cube)
V = matrix(c(-1,1,-1,-1,-1,1,-1,1,1,-1,-1,-1,1,1,-1,1,-1,1,1,1,1,1,-1,-1), ncol=3, nrow=8, byrow=TRUE)
matVpoly = rand_rotate(list("matrix"=V, "Vpoly"=TRUE))
}
